#
# The 'XXX_DISABLE_' suffix is used in this file to disable actions:
# 1) XXX_DISABLE_COVERAGE - disables uploads of coverage reports.
# These actions are disabled, because they conflict with the same ones run on Travis.
# Only one CI (Travis or GitHub Actions) can run them at the time, so they can be enabled here,
# when we decide to switch from Travis to GitHub Actions. The 'XXX_DISABLE_' suffix should be removed then.
#

name: pmemkv
on: [push, pull_request]

env:
    REPO:           pmemkv
    GITHUB_REPO:    pmem/pmemkv
    DOCKERHUB_REPO: pmem/pmemkv

jobs:
  #  linux:
    #    name: pmemkv
    #    runs-on: ubuntu-latest
    #    env:
    #      DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
    #      DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
    #      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
    #      HOST_WORKDIR:   /home/runner/work/pmemkv/pmemkv
    #      WORKDIR:        utils/docker
    #    strategy:
    #      matrix:
    #        CONFIG: ["TYPE=debug OS=fedora OS_VER=31",
    #                 "TYPE=debug OS=ubuntu OS_VER=19.10 XXX_DISABLE_COVERAGE=1",
    #                 "TYPE=release OS=fedora OS_VER=31",
    #                 "TYPE=release OS=ubuntu OS_VER=19.10",
    #                 "TYPE=valgrind OS=ubuntu OS_VER=19.10",
    #                 "TYPE=memcheck_drd OS=ubuntu OS_VER=19.10",
    #                 "TYPE=building OS=fedora OS_VER=31 PUSH_IMAGE=1 AUTO_DOC_UPDATE=1",
    #                 "TYPE=building OS=ubuntu OS_VER=19.10 PUSH_IMAGE=1 XXX_DISABLE_COVERAGE=1",
    #                 "TYPE=compatibility OS=fedora OS_VER=31",
    #                 "TYPE=bindings OS=ubuntu OS_VER=19.10_bindings PUSH_IMAGE=1"]
    #    steps:
    #       - name: Clone the git repo
    #         uses: actions/checkout@v2
    #         with:
    #            fetch-depth: 50
    #
    #       - name: Pull or rebuild the image
    #         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh
    #
    #       - name: Run the build
    #         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh
    #
    #       - name: Push the image
    #         run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh $OS-$OS_VER; fi"
  doc:
    name: build and publish docs
    runs-on: ubuntu-latest
    env:
      DOC_UPDATE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      HOST_WORKDIR:   /home/runner/work/pmemkv/pmemkv
      WORKDIR:        utils/docker
    if:
      contains( 'refs/heads/master', github.ref)
    strategy:
      matrix:
        CONFIG: ["TYPE=doc OS=fedora OS_VER=31 PUSH_IMAGE=1 AUTO_DOC_UPDATE=1"]
    steps:
       - name: Clone the git repo
         uses: actions/checkout@v2
         with:
            fetch-depth: 50
       - name: Run the build
         run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

